---
layout: post
title:      "BeerSearch"
date:       2020-08-09 23:23:45 -0400
permalink:  beersearch
---


BeerSearch searches for beers dependent on the user's input from the Command Line Interface(CLI). It utlizes an API (https://api.punkapi.com/v2/beers/) which has different microbeers. To use the BeerSearch, the user must fork and clone my  BeerSearch repository (https://github.com/drewsview34/beer_search). From the terminal, the user must input ```bundle install``` to get the gems install on thier local environment. After gems are installed, the user can use the program by entering ```ruby bin/run.rb``` in the terminal. When the command is executed, the program requires the file ```config/environment.rb``` with```require_relative```.  The ```config/environment.rb``` file contains the required gems and files the environmant needs to run the whole program. It's the foundation the program utilizes to build the program. Next, from the ```bin/run.rb```file, the program creates an instance of the CLI class and calls the instance method ```#run```to execute the program. The CLI class contains the code for the entire program which is the main file the progam uses to execute itself. When the istannce of the CLI is created, it executes the instance method ```#run``` as mentioned before, and calls another instance method ```welcome```. The instance method ```welcome``` first ```puts``` out the greeting along with a age verification request the prompts the user to enter ```y``` for yes and ```n``` for no. If the condition equates to no, the program tell the user they are no old enough and the program breaks. If yes is selected, the program executes the ```#search_menu``` instance method. From tthe ```#search_menu``` instance method, it displays the beers by calling the ```#display_beers``` instance method that collects the beers from the API from the API class to select from and prompts the user to make a selection. When the user makes a selection, the user's selection is saved to the local variable ```beer_selection``` . The local variable, is then passed to the ```#pick_a_beer()``` instance method which requires the local variable to execute. The ```#pick_a_beer()``` instance method executes an ```if``` statement and compares the local variable ```beer_selection``` to check if the local variable is less than or equal to zero and ```&&``` greater than the length of ```BeerSearchClass.all``` array plus one. Therefore, the user must input a number from 1 - 25. If they do not, the program will ```puts``` out to the terminal that it is an invalid response and prompts the user to try again. If the uesr does input a number from 1 - 25, the program will iterate over the BearSearchClass array ```@@all``` to find the user's selected beer and return the details of the selected beer. Finally, the program goes back to the instance method ```welcome``` and executed the instance method ```search_for_another_beer``` which asks the user if they would like to search for another beer. If they enter ```y```, the program will execute the code that takes the user back to the original ```search_menu``` instance method. If they enter ```no```, the program will exit. 

I'm proud of what I've created and I plan on improving, perhaps, even changing the BeerSearch to have a enhance user freindly CLI experience. Building this program was an empowring, creative, and challenging expereince. One takeaway from this project is just get the program running. Once the program is running, it's eaiser to refactor and  build better programs.
